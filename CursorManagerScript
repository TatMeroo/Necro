using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;

public class CursorManagerScript : MonoBehaviour
{
	[Space(5)]
	[Header("To Slide")]
	[Space(5)]
	public Camera cam;
	public Texture2D cursorTexture;
	[Space(10)]
	[Header("Options")]
	[Space(5)]
	public bool cursorVisible;
	public float deploymentHeight = 1000;
	public CursorMode cursorMode = CursorMode.Auto;
	[Space(10)]
	[Header("Information")]
	[Space(5)]
	public GameObject detectedObject;
	public GameObject selectedObject;
	public GameObject lastSelected;
	[Space(5)]
	public Vector3 selectedObject2D;
	public string uiOnClick;
	[Space(5)]
	public bool onTheVoid;
	public Vector3 worldPos;
	[Space(5)]
	public Vector3 currentMousePos;
	Vector2 hotSpot = Vector2.zero;
	List<GameObject> lastItem = new List<GameObject>();

	private void Awake()
	{
		Cursor.SetCursor(cursorTexture, hotSpot, cursorMode);
	}

	private void Update()
	{
		if (cursorVisible == true)
		{
			Cursor.visible = true;
		}

		if(cursorVisible == false)
		{
			Cursor.visible = false;
		}

		int number = lastItem.Count;
		if(number > 2)
		{
			lastItem.RemoveAt(0);
	    	lastSelected = lastItem[0];
		}

		currentMousePos = cam.WorldToScreenPoint(new Vector3(Input.mousePosition.x, Input.mousePosition.y, 10f));
		if(selectedObject != null)
		{
			selectedObject2D = cam.WorldToScreenPoint(selectedObject.transform.position);
		}

		RaycastHit hit;
		Ray landingRay = cam.ScreenPointToRay(Input.mousePosition);

		if (Physics.Raycast(landingRay, out hit, deploymentHeight))
		{
	     	if(hit.collider.gameObject == true)
		    {
		    	detectedObject = hit.collider.gameObject;

				if (Input.GetButtonDown("Fire1"))
				{
					selectedObject = detectedObject;
					onTheVoid = false;

					if (lastSelected == null)
					{
						lastSelected = selectedObject;
					}

					SelectedObject();
				}
		    }
	    }

		else
		{
	    	if (Input.GetButtonDown("Fire1"))
	       	{
	    		worldPos = cam.WorldToScreenPoint(new Vector3(Input.mousePosition.x, Input.mousePosition.y, 10f));

     			if(hit.collider == null)
		    	{
				    detectedObject = null;
					onTheVoid = true;
		    	}
	    	}
		}	
	}

	public void SelectedObject()
	{
		if (lastItem.Contains(selectedObject))
		{
			return;
		}

		if (lastItem.Contains(selectedObject) == false)
		{
			lastItem.Add(selectedObject);
		}
	}

	public void OnClic()
	{
		uiOnClick = EventSystem.current.currentSelectedGameObject.name;
	}
}
